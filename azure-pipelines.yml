trigger:
  batch: false
  branches:
    include:
    - master
  paths:
    include:
    - src/OAKProxy

jobs:
- job: get_sdk_version
  displayName: Determine SDK Version
  pool:
    vmImage: ubuntu-16.04
  steps:
  - checkout: self
    clean: all
    fetchDepth: 1
  - script: |
      version=$(cat global.json | jq -r '.sdk.version')
      echo "SDK Version from global.json is $version"
      echo "##vso[task.setvariable variable=dotnetSdkVersion;isOutput=true]$version"
    name: parse
    workingDirectory: src/OAKProxy
    displayName: Parse Version
- job: build_win
  dependsOn: get_sdk_version
  displayName: Build Windows
  pool:
    vmImage: vs2017-win2016
  variables:
    dotnetSdkVersion: $[ dependencies.get_sdk_version.outputs['parse.dotnetSdkVersion'] ]
  steps:
  - checkout: self
    clean: all
    fetchDepth: 1
  - task: UseDotNet@2
    displayName: 'Use .NET Core SDK'
    inputs:
      packageType: sdk
      version: $(dotnetSdkVersion)
  - task: NuGetCommand@2
    displayName: 'Add Azure DevOps Artifacts Credential'
    inputs:
      command: custom
      arguments: sources update -Name corefx-s4u -Username vsts -Password "$(System.AccessToken)" -StorePasswordInClearText -ConfigFile src/OAKProxy/Nuget.Config
  - script: dotnet publish -c Release -f netcoreapp2.2 -r win-x64 --self-contained true
    workingDirectory: src/OAKProxy
    displayName: Build
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: oakproxy-windows
      targetPath: src/OAKProxy/bin/Release/netcoreapp2.2/win-x64/publish
- job: build_linux
  dependsOn: get_sdk_version
  displayName: Build Linux
  pool:
    vmImage: ubuntu-16.04
  variables:
    dotnetSdkVersion: $[ dependencies.get_sdk_version.outputs['parse.dotnetSdkVersion'] ]
  steps:
  - checkout: self
    clean: all
    fetchDepth: 1
  - task: UseDotNet@2
    displayName: 'Use .NET Core SDK'
    inputs:
      packageType: sdk
      version: $(dotnetSdkVersion)
  - task: NuGetCommand@2
    displayName: 'Remove DevOps Artifacts Source'
    inputs:
      command: custom
      arguments: sources remove -Name corefx-s4u -ConfigFile src/OAKProxy/NuGet.Config
  - script: dotnet publish -c Release -f netcoreapp2.2 -r linux-x64 --self-contained false
    workingDirectory: src/OAKProxy
    displayName: Build
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: oakproxy-linux
      targetPath: src/OAKProxy/bin/Release/netcoreapp2.2/linux-x64/publish
