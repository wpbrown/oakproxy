{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the machine built-in Administrator."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the machine built-in Administrator."
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Name of the AD DS domain to join the VMs."
      }
    },
    "domainOrganizationalUnit": {
      "type": "string",
      "metadata": {
        "description": "Name of the AD DS OU to join the VMs."
      }
    },
    "oakproxyServerGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the AD DS OU to join the VMs."
      }
    },
    "oakproxyGmsaName": {
      "type": "string",
      "metadata": {
        "description": "Name of the AD DS OU to join the VMs."
      }
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (10 or less)."
      },
      "defaultValue": 3,
      "maxValue": 10
    },
    "domainJoinPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the user that has rights to join the VMs."
      }
    },
    "domainJoinUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the user that has rights to join the VMs."
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup()]",
      "metadata": {
        "description": "Address space for the lab network."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Address space for the lab network."
      }
    },
    "virtualNetworkSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Address space for the lab network."
      }
    },
    "domainHostNamePrefix": {
      "type": "string",
      "defaultValue": "azoakserv",
      "metadata": {
        "description": "Address space for the lab network."
      }
    },
    "hybridUseLicense": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Address space for the lab network."
      }
    },
    "accessMode": {
      "type": "string",
      "defaultValue": "Public",
      "allowedValues": [
        "Public",
        "Private"
      ],
      "metadata": {
        "description": "."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Address space for the lab network."
      }
    },
    "availabilityZones": {
      "type": "array",
      "defaultValue": []
    },
    "oakproxyVersion": {
      "type": "string",
      "defaultValue": "v0.3.0",
      "metadata": {
        "description": "."
      }
    },
    "vmConfigurationVersion": {
      "type": "string",
      "defaultValue": "v1.0.0",
      "metadata": {
        "description": "."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      },
      "defaultValue": "https://github.com/wpbrown/oakproxy/releases/download/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      },
      "defaultValue": ""
    },
    "oakproxyConfigurationUrl": {
      "type": "string",
      "defaultValue": "[uri(parameters('_artifactsLocation'), 'oakproxy.yml')]",
      "metadata": {
        "description": "."
      }
    },
    "applicationGatewayCapacity": {
      "type": "int",
      "defaultValue": 3
    },
    "applicationGatewaySubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Address space for the lab network."
      }
    },
    "applicationGatewaySslCertData": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Address space for the lab network."
      }
    },
    "applicationGatewaySslCertPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Address space for the lab network."
      }
    },
    "applicationGatewayDnsLabel": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Address space for the lab network."
      }
    }
  },
  "variables": {
    "serverImage": {
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "2019-Datacenter-smalldisk",
      "version": "latest"
    },
    "publicAccessMode": "[not(equals('Private', parameters('accessMode')))]",
    "privateAccessMode": "[not(equals('Public', parameters('accessMode')))]",
    "loadBalancerBackendAddressPoolsValue": [
      {
        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'oakproxy-lb', 'oakproxy-lb-bap')]"
      }
    ],
    "applicationGatewayBackendAddressPools": [
      {
        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', 'oakproxy-agw', 'oakproxy-agw-bap')]"
      }
    ],
    "storageAccountName": "[concat('oakproxy', uniqueString(resourceGroup().id), 'sa')]"
  },
  "resources": [
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "oakproxy-vmss",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "oakproxy-lb",
        "oakproxy-agw",
        "[variables('storageAccountName')]"
      ],
      "sku": {
        "name": "[parameters('vmSize')]",
        "capacity": "[parameters('instanceCount')]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "zones": "[if(empty(parameters('availabilityZones')),json('null'), parameters('availabilityZones'))]",
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "osProfile": {
            "computerNamePrefix": "[parameters('domainHostNamePrefix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": "[variables('serverImage')]",
            "osDisk": {
              "diffDiskSettings": {
                "option": "Local"
              },
              "caching": "ReadOnly",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('virtualNetworkSubnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": "[if(variables('privateAccessMode'),variables('loadBalancerBackendAddressPoolsValue'),json('null'))]",
                        "applicationGatewayBackendAddressPools": "[if(variables('publicAccessMode'),variables('applicationGatewayBackendAddressPools'),json('null'))]"
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "Microsoft.Powershell.DSC",
                "properties": {
                  "publisher": "Microsoft.Powershell",
                  "type": "DSC",
                  "typeHandlerVersion": "2.77",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "configuration": {
                      "url": "[uri(parameters('_artifactsLocation'), concat('refarch.djvm.', parameters('vmConfigurationVersion'), '/oakproxyconfiguration.ps1.zip'))]",
                      "script": "oakproxyconfiguration.ps1",
                      "function": "OakproxyConfiguration"
                    },
                    "configurationArguments": {
                      "DomainName": "[parameters('domainName')]",
                      "DomainOrganizationalUnit": "[parameters('domainOrganizationalUnit')]",
                      "DomainGroupName": "[parameters('oakproxyServerGroupName')]",
                      "GmsaName": "[parameters('oakproxyGmsaName')]",
                      "OakproxyPackageUrl": "[uri(parameters('_artifactsLocation'), concat(parameters('oakproxyVersion'), '/oakproxy-windows.zip'))]",
                      "OakproxyConfigurationUrl": "[parameters('oakproxyConfigurationUrl')]",
                      "KeyBlobContainerUrl": "[uri(reference(variables('storageAccountName')).primaryEndpoints.blob, 'keys')]"
                    }
                  },
                  "protectedSettings": {
                    "configurationArguments": {
                      "DomainJoinCredential": {
                        "userName": "[parameters('domainJoinUsername')]",
                        "Password": "[parameters('domainJoinPassword')]"
                      },
                      "ArtifactsSasToken": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
                  }
                }
              }
            ]
          },
          "licenseType": "[if(parameters('hybridUseLicense'), 'Windows_Server', json('null'))]"
        }
      }
    },
    {
      "condition": "[variables('privateAccessMode')]",
      "type": "Microsoft.Network/loadBalancers",
      "name": "oakproxy-lb",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-04-01",
      "dependsOn": [],
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "oakproxy-lb-fipc",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('virtualNetworkSubnetName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "oakproxy-lb-bap"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "roundRobinLBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'oakproxy-lb', 'oakproxy-lb-fipc')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'oakproxy-lb', 'oakproxy-lb-bap')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'oakproxy-lb', 'oakproxy-lb-probe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "oakproxy-lb-probe",
            "properties": {
              "protocol": "Http",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "requestPath": "/.oakproxy/health"
            }
          }
        ]
      }
    },
    {
      "condition": "[variables('publicAccessMode')]",
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "oakproxy-agw-pip",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('applicationGatewayDnsLabel')]"
        }
      }
    },
    {
      "condition": "[variables('publicAccessMode')]",
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2019-04-01",
      "name": "oakproxy-agw",
      "dependsOn": [
        "oakproxy-agw-pip"
      ],
      "location": "[resourceGroup().location]",
      "zones": "[if(empty(parameters('availabilityZones')),json('null'), parameters('availabilityZones'))]",
      "properties": {
        "sku": {
          "name": "Standard_v2",
          "tier": "Standard_v2",
          "capacity": "[parameters('applicationGatewayCapacity')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "oakproxy-agw-ipc",
            "properties": {
              "subnet": {
                "id": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('applicationGatewaySubnetName'))]"
              }
            }
          }
        ],
        "sslCertificates": [
          {
            "name": "oakproxy-agw-cert",
            "properties": {
              "data": "[parameters('applicationGatewaySslCertData')]",
              "password": "[parameters('applicationGatewaySslCertPassword')]"
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "oakproxy-agw-feip",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'oakproxy-agw-pip')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "oakproxy-agw-port",
            "properties": {
              "port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "oakproxy-agw-bap"
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "oakproxy-agw-hsc",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": true,
              "requestTimeout": 30,
              "probe": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/probes', 'oakproxy-agw', 'oakproxy-agw-probe')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "oakproxy-agw-listener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', 'oakproxy-agw', 'oakproxy-agw-feip')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', 'oakproxy-agw', 'oakproxy-agw-port')]"
              },
              "protocol": "Https",
              "sslCertificate": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', 'oakproxy-agw', 'oakproxy-agw-cert')]"
              },
              "requireServerNameIndication": false
            }
          }
        ],
        "urlPathMaps": [],
        "requestRoutingRules": [
          {
            "name": "oakproxy-agw-rrr",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', 'oakproxy-agw', 'oakproxy-agw-listener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', 'oakproxy-agw', 'oakproxy-agw-bap')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', 'oakproxy-agw', 'oakproxy-agw-hsc')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "oakproxy-agw-probe",
            "properties": {
              "protocol": "Http",
              "path": "/.oakproxy/health",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": true,
              "minServers": 0,
              "match": {
                "statusCodes": [
                  "200-399"
                ]
              }
            }
          }
        ],
        "enableHttp2": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-04-01",
      "sku": {
        "name": "[if(empty(parameters('availabilityZones')),'Standard_LRS', 'Standard_ZRS')]"
      },
      "kind": "StorageV2",
      "properties": {},
      "resources": [
        {
          "name": "default/keys",
          "type": "blobServices/containers",
          "apiVersion": "2019-04-01",
          "dependsOn": [
            "[variables('storageAccountName')]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers/providers/roleAssignments",
      "name": "[concat(variables('storageAccountName'),'/default/keys/Microsoft.Authorization/',guid(resourceGroup().id, 'assignrole-vmss-sa'))]",
      "apiVersion": "2018-07-01",
      "properties": {
        "principalId": "[reference('oakproxy-vmss', '2018-06-01', 'Full').identity.principalId]",
        "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]"
      },
      "dependsOn": [
        "oakproxy-vmss",
        "[variables('storageAccountName')]"
      ]
    }
  ],
  "outputs": {}
}